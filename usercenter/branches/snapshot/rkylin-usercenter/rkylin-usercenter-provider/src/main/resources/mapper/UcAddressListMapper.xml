<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rongcapital.usercenter.provider.dao.UcAddressListMapper" >
  <resultMap id="BaseResultMap" type="com.rongcapital.usercenter.provider.po.UcAddressList" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
    <result column="APP_CODE" property="appCode" jdbcType="VARCHAR" />
    <result column="PRO_ID" property="proId" jdbcType="VARCHAR" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="UPDATED_TIME" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.rongcapital.usercenter.provider.po.UcAddressList" extends="BaseResultMap" >
    <result column="ADDRESS_LIST" property="addressList" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, ORG_CODE, APP_CODE, PRO_ID, CREATED_TIME, UPDATED_TIME
  </sql>
  <sql id="Blob_Column_List" >
    ADDRESS_LIST
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.rongcapital.usercenter.provider.po.UcAddressListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from UC_ADDRESS_LIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rongcapital.usercenter.provider.po.UcAddressListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from UC_ADDRESS_LIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from UC_ADDRESS_LIST
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from UC_ADDRESS_LIST
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rongcapital.usercenter.provider.po.UcAddressListExample" >
    delete from UC_ADDRESS_LIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rongcapital.usercenter.provider.po.UcAddressList" >
    insert into UC_ADDRESS_LIST (ID, USER_ID, ORG_CODE, 
      APP_CODE, PRO_ID, CREATED_TIME, 
      UPDATED_TIME, ADDRESS_LIST)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR}, 
      #{appCode,jdbcType=VARCHAR}, #{proId,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{addressList,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rongcapital.usercenter.provider.po.UcAddressList" >
    insert into UC_ADDRESS_LIST
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="orgCode != null" >
        ORG_CODE,
      </if>
      <if test="appCode != null" >
        APP_CODE,
      </if>
      <if test="proId != null" >
        PRO_ID,
      </if>
      <if test="createdTime != null" >
        CREATED_TIME,
      </if>
      <if test="updatedTime != null" >
        UPDATED_TIME,
      </if>
      <if test="addressList != null" >
        ADDRESS_LIST,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="appCode != null" >
        #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="proId != null" >
        #{proId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressList != null" >
        #{addressList,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rongcapital.usercenter.provider.po.UcAddressListExample" resultType="java.lang.Integer" >
    select count(*) from UC_ADDRESS_LIST
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update UC_ADDRESS_LIST
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.orgCode != null" >
        ORG_CODE = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.appCode != null" >
        APP_CODE = #{record.appCode,jdbcType=VARCHAR},
      </if>
      <if test="record.proId != null" >
        PRO_ID = #{record.proId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null" >
        UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addressList != null" >
        ADDRESS_LIST = #{record.addressList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update UC_ADDRESS_LIST
    set ID = #{record.id,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      ORG_CODE = #{record.orgCode,jdbcType=VARCHAR},
      APP_CODE = #{record.appCode,jdbcType=VARCHAR},
      PRO_ID = #{record.proId,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      ADDRESS_LIST = #{record.addressList,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update UC_ADDRESS_LIST
    set ID = #{record.id,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      ORG_CODE = #{record.orgCode,jdbcType=VARCHAR},
      APP_CODE = #{record.appCode,jdbcType=VARCHAR},
      PRO_ID = #{record.proId,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rongcapital.usercenter.provider.po.UcAddressList" >
    update UC_ADDRESS_LIST
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null" >
        ORG_CODE = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="appCode != null" >
        APP_CODE = #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="proId != null" >
        PRO_ID = #{proId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressList != null" >
        ADDRESS_LIST = #{addressList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rongcapital.usercenter.provider.po.UcAddressList" >
    update UC_ADDRESS_LIST
    set USER_ID = #{userId,jdbcType=VARCHAR},
      ORG_CODE = #{orgCode,jdbcType=VARCHAR},
      APP_CODE = #{appCode,jdbcType=VARCHAR},
      PRO_ID = #{proId,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP},
      ADDRESS_LIST = #{addressList,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rongcapital.usercenter.provider.po.UcAddressList" >
    update UC_ADDRESS_LIST
    set USER_ID = #{userId,jdbcType=VARCHAR},
      ORG_CODE = #{orgCode,jdbcType=VARCHAR},
      APP_CODE = #{appCode,jdbcType=VARCHAR},
      PRO_ID = #{proId,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      UPDATED_TIME = #{updatedTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>